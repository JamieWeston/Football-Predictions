name: Football Predictions

on:
  schedule:
    - cron: '0 8 * * *'
  workflow_dispatch:

jobs:
  predict:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        pip install requests numpy
    
    - name: Test API Key
      env:
        API_KEY: ${{ secrets.FOOTBALL_API_KEY }}
      run: |
        echo "Testing API connection..."
        python -c "
import os
import requests
api_key = os.environ.get('API_KEY', '')
if api_key:
    print(f'API Key found: {api_key[:10]}...')
    headers = {'X-Auth-Token': api_key}
    response = requests.get('https://api.football-data.org/v4/competitions', headers=headers)
    print(f'API Response: {response.status_code}')
    if response.status_code == 200:
        print('‚úÖ API Key is valid!')
    else:
        print('‚ùå API Key issue:', response.text[:200])
else:
    print('‚ùå No API Key found in secrets!')
        "
    
    - name: Fetch latest data
      env:
        API_KEY: ${{ secrets.FOOTBALL_API_KEY }}
      run: |
        echo "üìÖ Fetching upcoming matches..."
        python src/fetch_data.py
    
    - name: Check fetched data
      run: |
        echo "üìä Checking what was fetched..."
        if [ -f data/upcoming_matches.csv ]; then
          echo "Upcoming matches:"
          wc -l data/upcoming_matches.csv
          head -10 data/upcoming_matches.csv
        fi
        if [ -f data/historical_matches.csv ]; then
          echo "Historical matches:"
          wc -l data/historical_matches.csv
        fi
    
    - name: Generate predictions
      run: |
        echo "üîÆ Generating predictions..."
        python src/predict.py
    
    - name: Verify predictions
      run: |
        if [ -f predictions.json ]; then
          echo "‚úÖ Predictions generated"
          echo "Size: $(stat -c%s predictions.json) bytes"
          echo "Content preview:"
          python -c "
import json
with open('predictions.json') as f:
    data = json.load(f)
print(f'Total predictions: {data.get(\"predictions_count\", 0)}')
print(f'Date range: {data.get(\"date_range\", {})}')
if data.get('predictions'):
    for p in data['predictions'][:3]:
        print(f'{p[\"home_team\"]} vs {p[\"away_team\"]} - {p[\"competition\"]}')
          "
        fi
    
    - name: Commit and push
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add -A
        git diff --quiet && git diff --staged --quiet || (
          git commit -m "üîÑ Update predictions - $(date +'%Y-%m-%d %H:%M')"
          git push
        )
